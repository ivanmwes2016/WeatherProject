{"ast":null,"code":"var _jsxFileName = \"/Users/greatcommissionmedia/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nconst API_key = \"ce2f3b60a12b376f9013c31c56225ca7\";\n{\n  /** SETTING THE CONSTRUCTOR */\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n      const response = await api_call.json();\n      {\n        /** converts the data in Json format */\n      }\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        temp_celsius: response.main.temp\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/greatcommissionmedia/weather-app/src/App.js"],"names":["React","Component","Weather","API_key","App","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","temp_celsius","main","temp","state","undefined","icon","celsius","temp_max","temp_min","description","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA;AAAC;AAA+B;;AAChC,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAiC;AAC/BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAsBbC,UAtBa,GAsBA,YAAS;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEL,OAAQ,EAA7E,CAA5B;AAEA,YAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAAuC;AAAC;AAAwC;AAChFC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAACL,QAAQ,CAACM,IADF;AAEZC,QAAAA,OAAO,EAACP,QAAQ,CAACQ,GAAT,CAAaD,OAFT;AAGZE,QAAAA,YAAY,EAACT,QAAQ,CAACU,IAAT,CAAcC;AAHf,OAAd;AAOD,KAnCY;;AAEX,SAAKC,KAAL,GAAa;AACXP,MAAAA,IAAI,EAAEQ,SADK;AAEXN,MAAAA,OAAO,EAAEM,SAFE;AAGXC,MAAAA,IAAI,EAACD,SAHM;AAIXH,MAAAA,IAAI,EAACG,SAJM;AAKXE,MAAAA,OAAO,EAACF,SALG;AAMXG,MAAAA,QAAQ,EAACH,SANE;AAOXI,MAAAA,QAAQ,EAACJ,SAPE;AAQXK,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,KAAK,EAAE;AATI,KAAb;AAgBA,SAAKtB,UAAL;AAED;;AAiBDuB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AACA,MAAA,IAAI,EAAG,KAAKR,KAAL,CAAWP,IADlB;AAEA,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWL,OAFpB;AAGA,MAAA,YAAY,EAAE,KAAKK,KAAL,CAAWG,OAHzB;AAIA,MAAA,QAAQ,EAAI,KAAKH,KAAL,CAAWI,QAJvB;AAKA,MAAA,QAAQ,EAAI,KAAKJ,KAAL,CAAWK,QALvB;AAMA,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAcD;;AArD8B;;AA0DjC,eAAevB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\n\nconst API_key = \"ce2f3b60a12b376f9013c31c56225ca7\"\n{/** SETTING THE CONSTRUCTOR */}\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description: \"\",\n      error: false\n      \n      \n\n\n\n    };\n    this.getWeather();\n\n  }\n\n  getWeather = async()=>{\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n\n    const response = await api_call.json();{/** converts the data in Json format */}\n    console.log(response);\n\n    this.setState({\n      city:response.name,\n      country:response.sys.country,\n      temp_celsius:response.main.temp\n     \n\n    })\n  };\n  \n  render(){\n    return(\n      <div className=\"App\">\n      <Weather \n      city ={this.state.city} \n      country={this.state.country} \n      temp_celsius={this.state.celsius}\n      temp_max = {this.state.temp_max}\n      temp_min = {this.state.temp_min}\n      description={this.state.description}\n      \n      />\n      \n       </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}